// Generated by CoffeeScript 1.6.2
(function() {
  var EqualHeight;

  $.fn.equalHeight = function(option) {
    return this.each(function() {
      var $this, obj, options;

      $this = $(this);
      options = typeof option === 'object' && option;
      if (!(obj = $this.data('equalHeightObj'))) {
        $this.data('equalHeightObj', obj = new EqualHeight(this, options));
      }
      if (typeof option === 'string') {
        return obj[option]();
      }
    });
  };

  $.fn.equalHeight.defaults = {
    prop: 'min-height',
    method: 'outerHeight',
    columns: null
  };

  EqualHeight = (function() {
    function EqualHeight(el, options) {
      this.$el = $(el);
      if (typeof options === 'string') {
        options.selector = options;
      }
      this.options = $.extend({}, $.fn.equalHeight.defaults, options);
      this.refresh();
    }

    EqualHeight.prototype.refresh = function() {
      var $els, $slice, end, len, maxHeight, method, start, _results;

      $els = this.$el.find(this.options.selector);
      start = 0;
      len = this.options.columns || $els.length;
      _results = [];
      while (true) {
        end = start + len;
        $slice = $els.slice(start, end);
        if ($slice.length) {
          maxHeight = 0;
          method = this.options.method;
          $slice.each(function() {
            var $el, height;

            $el = $(this);
            height = $el[method].call($el);
            if (height > maxHeight) {
              return maxHeight = height;
            }
          });
          $slice.css(this.options.prop, maxHeight);
          start += len;
          _results.push(end += len);
        } else {
          break;
        }
      }
      return _results;
    };

    return EqualHeight;

  })();

  $(window).on('load', function() {
    return $('[data-equal-height]').each(function() {
      var data, selector;

      if (selector = $(this).data('equalHeight')) {
        data = {
          selector: selector,
          columns: $(this).data('equalHeightColumns')
        };
      }
      return $(this).equalHeight(data);
    });
  });

}).call(this);
